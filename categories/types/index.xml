<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Types on LOLCODE Documentation</title>
    <link>/categories/types/</link>
    <description>Recent content in Types on LOLCODE Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 May 2016 08:41:21 -0400</lastBuildDate>
    
	<atom:link href="/categories/types/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Booleans</title>
      <link>/lolcode/booleans/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/booleans/</guid>
      <description>The two boolean (TROOF) values are WIN (true) and FAIL (false). The empty string (&amp;ldquo;&amp;rdquo;), an empty array, and numerical zero are all cast to FAIL. All other values evaluate to WIN.</description>
    </item>
    
    <item>
      <title></title>
      <link>/lolcode/about_types/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/about_types/</guid>
      <description>(updated from 1.1)
The variable types that LOLCODE currently recognizes are: strings (YARN), integers (NUMBR), floats (NUMBAR), and booleans (TROOF) (Arrays (BUKKIT) are reserved for future expansion.) Typing is handled dynamically. Until a variable is given an initial value, it is untyped (NOOB). Casting operations operate on TYPE types, as well.</description>
    </item>
    
    <item>
      <title>Untyped</title>
      <link>/lolcode/untyped/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/untyped/</guid>
      <description>The untyped type (NOOB) cannot be implicitly cast into any type except a TROOF. A cast into TROOF makes the variable FAIL. Any operations on a NOOB that assume another type (e.g., math) results in an error.
Explicit casts of a NOOB (untyped, uninitialized) variable are to empty/zero values for all other types.</description>
    </item>
    
    <item>
      <title>Numerical Types</title>
      <link>/lolcode/numerical/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/numerical/</guid>
      <description>A NUMBR is an integer as specified in the host implementation/architecture. Any contiguous sequence of digits outside of a quoted YARN and not containing a decimal point (.) is considered a NUMBR. A NUMBR may have a leading hyphen (-) to signify a negative number.
A NUMBAR is a float as specified in the host implementation/architecture. It is represented as a contiguous string of digits containing exactly one decimal point. Casting a NUMBAR to a NUMBR truncates the decimal portion of the floating point number.</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>/lolcode/strings/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/strings/</guid>
      <description>String literals (YARN) are demarked with double quotation marks (&amp;ldquo;). Line continuation and soft-command-breaks are ignored inside quoted strings. An unterminated string literal (no closing quote) will cause an error.
Within a string, all characters represent their literal value except the colon (:), which is the escape character. Characters immediately following the colon also take on a special meaning.
 :) represents a newline (\n) :&amp;gt; represents a tab (\t) :o represents a bell (beep) (\g) :&amp;rdquo; represents a literal double quote (&amp;ldquo;) :: represents a single literal colon (:)  The colon may also introduce more verbose escapes enclosed within some form of bracket.</description>
    </item>
    
    <item>
      <title>Arrays</title>
      <link>/lolcode/arrays/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/arrays/</guid>
      <description>Array and dictionary types are currently under-specified. There is general will to unify them, but indexing and definition is still under discussion.</description>
    </item>
    
    <item>
      <title>Types</title>
      <link>/lolcode/types/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/types/</guid>
      <description>The TYPE type only has the values of TROOF, NOOB, NUMBR, NUMBAR, YARN, and TYPE, as bare words. They may be legally cast to TROOF (all true except for NOOB) or YARN.
TYPEs are under current review. Current sentiment is to delay defining them until user-defined types are relevant, but that would mean that type comparisons are left unresolved in the meantime.</description>
    </item>
    
  </channel>
</rss>